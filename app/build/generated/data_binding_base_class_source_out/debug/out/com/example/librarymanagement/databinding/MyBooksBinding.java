// Generated by view binder compiler. Do not edit!
package com.example.librarymanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.librarymanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MyBooksBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout eight;

  @NonNull
  public final LinearLayout five;

  @NonNull
  public final LinearLayout four;

  @NonNull
  public final LinearLayout one;

  @NonNull
  public final TextView pBook1;

  @NonNull
  public final TextView pBook1Issuedate;

  @NonNull
  public final TextView pBook1Submitdate;

  @NonNull
  public final TextView pBook2;

  @NonNull
  public final TextView pBook2Issuedate;

  @NonNull
  public final TextView pBook2Submitdate;

  @NonNull
  public final TextView pFine1;

  @NonNull
  public final TextView pFine2;

  @NonNull
  public final Button refreashbook;

  @NonNull
  public final LinearLayout seven;

  @NonNull
  public final LinearLayout six;

  @NonNull
  public final LinearLayout three;

  @NonNull
  public final LinearLayout two;

  private MyBooksBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout eight,
      @NonNull LinearLayout five, @NonNull LinearLayout four, @NonNull LinearLayout one,
      @NonNull TextView pBook1, @NonNull TextView pBook1Issuedate,
      @NonNull TextView pBook1Submitdate, @NonNull TextView pBook2,
      @NonNull TextView pBook2Issuedate, @NonNull TextView pBook2Submitdate,
      @NonNull TextView pFine1, @NonNull TextView pFine2, @NonNull Button refreashbook,
      @NonNull LinearLayout seven, @NonNull LinearLayout six, @NonNull LinearLayout three,
      @NonNull LinearLayout two) {
    this.rootView = rootView;
    this.eight = eight;
    this.five = five;
    this.four = four;
    this.one = one;
    this.pBook1 = pBook1;
    this.pBook1Issuedate = pBook1Issuedate;
    this.pBook1Submitdate = pBook1Submitdate;
    this.pBook2 = pBook2;
    this.pBook2Issuedate = pBook2Issuedate;
    this.pBook2Submitdate = pBook2Submitdate;
    this.pFine1 = pFine1;
    this.pFine2 = pFine2;
    this.refreashbook = refreashbook;
    this.seven = seven;
    this.six = six;
    this.three = three;
    this.two = two;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MyBooksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MyBooksBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.my_books, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MyBooksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.eight;
      LinearLayout eight = rootView.findViewById(id);
      if (eight == null) {
        break missingId;
      }

      id = R.id.five;
      LinearLayout five = rootView.findViewById(id);
      if (five == null) {
        break missingId;
      }

      id = R.id.four;
      LinearLayout four = rootView.findViewById(id);
      if (four == null) {
        break missingId;
      }

      id = R.id.one;
      LinearLayout one = rootView.findViewById(id);
      if (one == null) {
        break missingId;
      }

      id = R.id.p_book1;
      TextView pBook1 = rootView.findViewById(id);
      if (pBook1 == null) {
        break missingId;
      }

      id = R.id.p_book1_issuedate;
      TextView pBook1Issuedate = rootView.findViewById(id);
      if (pBook1Issuedate == null) {
        break missingId;
      }

      id = R.id.p_book1_submitdate;
      TextView pBook1Submitdate = rootView.findViewById(id);
      if (pBook1Submitdate == null) {
        break missingId;
      }

      id = R.id.p_book2;
      TextView pBook2 = rootView.findViewById(id);
      if (pBook2 == null) {
        break missingId;
      }

      id = R.id.p_book2_issuedate;
      TextView pBook2Issuedate = rootView.findViewById(id);
      if (pBook2Issuedate == null) {
        break missingId;
      }

      id = R.id.p_book2_submitdate;
      TextView pBook2Submitdate = rootView.findViewById(id);
      if (pBook2Submitdate == null) {
        break missingId;
      }

      id = R.id.p_fine1;
      TextView pFine1 = rootView.findViewById(id);
      if (pFine1 == null) {
        break missingId;
      }

      id = R.id.p_fine2;
      TextView pFine2 = rootView.findViewById(id);
      if (pFine2 == null) {
        break missingId;
      }

      id = R.id.refreashbook;
      Button refreashbook = rootView.findViewById(id);
      if (refreashbook == null) {
        break missingId;
      }

      id = R.id.seven;
      LinearLayout seven = rootView.findViewById(id);
      if (seven == null) {
        break missingId;
      }

      id = R.id.six;
      LinearLayout six = rootView.findViewById(id);
      if (six == null) {
        break missingId;
      }

      id = R.id.three;
      LinearLayout three = rootView.findViewById(id);
      if (three == null) {
        break missingId;
      }

      id = R.id.two;
      LinearLayout two = rootView.findViewById(id);
      if (two == null) {
        break missingId;
      }

      return new MyBooksBinding((RelativeLayout) rootView, eight, five, four, one, pBook1,
          pBook1Issuedate, pBook1Submitdate, pBook2, pBook2Issuedate, pBook2Submitdate, pFine1,
          pFine2, refreashbook, seven, six, three, two);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
