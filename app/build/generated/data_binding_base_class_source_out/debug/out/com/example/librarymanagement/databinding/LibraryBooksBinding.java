// Generated by view binder compiler. Do not edit!
package com.example.librarymanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.GridView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.librarymanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LibraryBooksBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText bookSearch;

  @NonNull
  public final Button bookSearchButton;

  @NonNull
  public final GridView gridviewl;

  @NonNull
  public final LinearLayout shell;

  private LibraryBooksBinding(@NonNull RelativeLayout rootView, @NonNull EditText bookSearch,
      @NonNull Button bookSearchButton, @NonNull GridView gridviewl, @NonNull LinearLayout shell) {
    this.rootView = rootView;
    this.bookSearch = bookSearch;
    this.bookSearchButton = bookSearchButton;
    this.gridviewl = gridviewl;
    this.shell = shell;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LibraryBooksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LibraryBooksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.library_books, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LibraryBooksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.book_search;
      EditText bookSearch = rootView.findViewById(id);
      if (bookSearch == null) {
        break missingId;
      }

      id = R.id.book_search_button;
      Button bookSearchButton = rootView.findViewById(id);
      if (bookSearchButton == null) {
        break missingId;
      }

      id = R.id.gridviewl;
      GridView gridviewl = rootView.findViewById(id);
      if (gridviewl == null) {
        break missingId;
      }

      id = R.id.shell;
      LinearLayout shell = rootView.findViewById(id);
      if (shell == null) {
        break missingId;
      }

      return new LibraryBooksBinding((RelativeLayout) rootView, bookSearch, bookSearchButton,
          gridviewl, shell);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
